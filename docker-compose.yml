version: '3'

networks:
  web:
    external: true
  backend:
    external: true

volumes:
  database_data:
    driver: local

services:
  web:
    container_name: mp_web
    platform: linux/amd64
    build: .
    restart: always
    # ports:
    #   - 8080:80
    links:
      - mysql
      - geo
    depends_on:
      - mysql
      - geo
    volumes:
      - ./mysite:/app/mysite
      - ./themes:/app/themes
      - ./assets:/app/assets
      - ./scripts:/app/scripts
      - ./surveys:/app/surveys
      - ./auth:/app/auth
      - ./maps:/app/maps
      - ./logs:/app/logs
      - ./public:/app/public
      - ./interaction:/app/interaction
      - ./_config/phpunit.xml:/app/phpunit.xml:ro
    expose:
      - 80
    networks:
      - web
      - backend
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=web'
      - 'traefik.http.routers.sms-web.rule=Host(`${DEPLOYMENT}`)'
      - 'traefik.http.routers.sms-web.entrypoints=websecure'
      - 'traefik.http.routers.sms-web.tls=true'
      - 'traefik.http.routers.sms-web.tls.certresolver=myresolver'
    env_file:
      - .env
    # environment:
    #   DB_HOST: mysql
    #   DB_USER: user
    #   DB_PASS: secret
    #   DB_NAME: make-place
    #   SITE_ENV: dev
    #   DEFAULT_USER: admin
    #   DEFAULT_PASS: password
    #   GEO_URL: geo:3000
    #   GEO_KEY: not_secret
    #   PRIMARY_COL: '#836953'

  mysql:
    container_name: mp_mysql
    platform: linux/amd64
    image: mysql:5.7
    restart: always
    ports:
      - 3306:3306
    networks:
      - backend
    volumes:
      - database_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  geo:
    container_name: mp_geo
    image: mkpl/geography:1.1.1
    restart: always
    # ports:
    #   - 3000:3000
    expose:
      - 3000
    networks:
      - backend
    links:
      - mysql
    environment:
      SQL_URL: mysql://${DB_USER}:${DB_PASS}@${DB_HOST}/geo
      NODE_ENV: ${NODE_ENV}
